Some most common problems

1. LRU Cache
2. Next greater element (NGE)
3. Sliding Window problems
4. Longest Increasing Subsequence (Length, Sequence, Sum)
5. All permutations, subsets - back tracking
6. BFS and DFS in Graph (directed/undirected)











𝗦𝗼𝗺𝗲 𝘁𝗶𝗽𝘀 𝘁𝗼 𝗰𝗼𝗻𝘀𝗶𝗱𝗲𝗿 𝘄𝗵𝗶𝗹𝗲 𝗽𝗿𝗼𝗯𝗹𝗲𝗺-𝘀𝗼𝗹𝘃𝗶𝗻𝗴:

If an input array is sorted then
  - Binary search
  - Two pointers

If asked for all permutations/subsets then
  - Backtracking

If given a tree then
  - DFS
  - BFS

If given a graph then
  - DFS
  - BFS

If given a linked list then
  - Two pointers

If recursion is banned then
  - Stack

If must solve in-place then
  - Swap corresponding values
  - Store one or more different values in the same pointer

If asked for maximum/minimum subarray/subset/options then
  - Dynamic programming

If asked for top/least K items then
  - Heap

If asked for common strings then
  - Map
  - Trie

Else
  - Map/Set for O(1) time & O(n) space
  - Sort input for O(nlogn) time and O(1) space

Let me know your thoughts in the comment below.

#programming #competitiveprogramming #datastructures #problemsolving #faang